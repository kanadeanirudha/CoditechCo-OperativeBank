@model BankSavingsAccountViewModel
@{
    ViewBag.Title = Model.BankSavingsAccountId > 0 ? "Update Bank Savings Account" : "Add Bank Savings Account";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "SelectedCentreCode", DropdownSelectedValue = Model.SelectedCentreCode, ChangeEvent = "BankSavingsAccount.GetBankMemberByCentreCode()" };
    DropdownViewModel bankMemberDropdown = new DropdownViewModel() { DropdownType = DropdownCustomTypeEnum.BankMembers.ToString(), DropdownName = "BankMemberId", DropdownSelectedValue = Model.BankMemberId.ToString(), Parameter = Model.SelectedCentreCode, IsCustomDropdown = true };
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.BankSavingsAccountId > 0)
                                {
                                    <h4 class="card-title">Update Bank Savings Account</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Bank Savings Account</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SelectedCentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.SelectedCentreCode)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.BankMemberId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", bankMemberDropdown)
                                        @Html.ValidationMessageFor(x => x.BankMemberId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.BalanceAmount, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.BalanceAmount, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.BalanceAmount)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SavingAccountNumber, new { @class = "form-label required", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                        @Html.TextBoxFor(x => x.SavingAccountNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.SavingAccountNumber)
                                    </div>
                                </div>
                               
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OpeningDate, new { @class = "form-label required", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                        @Html.TextBoxFor(x => x.OpeningDate, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OpeningDate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.LastBalanceUpdate, new { @class = "form-label required", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                        @Html.TextBoxFor(x => x.LastBalanceUpdate, new { @class = "form-control", @readonly = "true" })
                                        @Html.ValidationMessageFor(x => x.LastBalanceUpdate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AccountStatus, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.AccountStatusEnumId.ToString(),
                                   DropdownName = "AccountStatusEnumId",
                                   GroupCode = DropdownCustomTypeEnum.AccountStatus.ToString(),
                                   IsDisabled = Model.AccountStatusEnumId > 0,
                                   IsRequired = true,
                               })
                                        @Html.ValidationMessageFor(x => x.AccountStatusEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.KYCStatus, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.KYCStatus, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Remark, new { @class = "form-label"})
                                        @Html.TextAreaFor(x => x.Remark, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Remark)
                                    </div>
                                </div>

                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/coditech/CoOperativeBank/BankSavingsAccount.js"></script>
}



