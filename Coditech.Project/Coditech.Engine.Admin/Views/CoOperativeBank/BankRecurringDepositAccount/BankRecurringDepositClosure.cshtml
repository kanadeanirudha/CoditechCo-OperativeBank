@model BankRecurringDepositClosureViewModel
@{
    ViewBag.Title = "Bank Loan Fore Closures";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = Model.BankRecurringDepositClosureId > 0 ? "UpdateBankRecurringDepositClosure" : "CreateBankRecurringDepositClosure";
    string css = Model.BankRecurringDepositAccountId > 0 ? "col-lg-10" : "col-lg-12";
    Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
    keyValuePairs.Add("BankRecurringDepositAccountId", Model.BankRecurringDepositAccountId.ToString());
}
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            @if (Model.BankRecurringDepositAccountId > 0)
            {
                <div class="col-lg-2">
                    @Html.Partial("~/Views/CoOperativeBank/BankRecurringDepositAccount/_BankRecurringDepositAccountSidePannel.cshtml", keyValuePairs)
                </div>
            }
            <div class="@css">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.BankRecurringDepositClosureId > 0)
                                {
                                    <h4 class="card-title">Update Recurring Deposit Closure</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Recurring Deposit Closure</h4>
                                }
                            </div><!--end col-->
                        </div><!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.BankRecurringDepositClosureId)
                            @Html.HiddenFor(m => m.BankRecurringDepositAccountId)
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-6">
                                        @Html.LabelFor(x => x.ClosureDate, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.ClosureDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.ClosureDate)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-6">
                                        @Html.LabelFor(x => x.AmountPaid, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.AmountPaid, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.AmountPaid)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-6">
                                        @Html.LabelFor(x => x.PenaltyAmount, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.PenaltyAmount, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.PenaltyAmount)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-6">
                                        @Html.LabelFor(x => x.ApprovedBy, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.ApprovedBy, new { @class = "form-control", @onkeypress = "return CoditechCommon.AllowOnlyAlphabetWithouSpacing()" })
                                        @Html.ValidationMessageFor(x => x.ApprovedBy)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ClosureType, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.ClosureTypeEnumId.ToString(),
                                   DropdownName = "ClosureTypeEnumId",
                                   GroupCode = DropdownCustomTypeEnum.ClosureType.ToString(),
                                   IsRequired = true,
                               })
                                        @Html.ValidationMessageFor(x => x.ClosureTypeEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-6">
                                        @Html.LabelFor(x => x.Reason, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Reason, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Reason)
                                    </div>
                                </div>
                            </div>
                            <br />
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- jQuery UI JS -->
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
@section scripts {
    <script type="text/javascript">
        $(function () {
            function initSimpleDatepicker(selector) {
                const today = new Date();
                const minDate = new Date(today.getFullYear() - 2, 0, 1); // Jan 1, two years ago
                const maxDate = new Date(today.getFullYear() + 2, 11, 31); // Dec 31, two years ahead

                $(selector).datepicker({
                    changeMonth: true,
                    changeYear: true,
                    dateFormat: "@AdminGeneralHelper.DateFormatForCalendar()",
                    showButtonPanel: true,
                    autoSize: true,
                    closeText: "Clear",
                    currentText: "Today",
                    yearRange: "-2:+2",
                    minDate: minDate,
                    maxDate: maxDate,
                    beforeShow: function (input, inst) {
                        setTimeout(function () {
                            var buttonPane = $(inst.dpDiv).find(".ui-datepicker-buttonpane");
                            buttonPane.find(".ui-datepicker-current").off("click").on("click", function () {
                                var today = new Date();
                                $(selector).datepicker("setDate", today);
                                $(selector).change(); // Optional: trigger change event
                            });
                        }, 1);
                    },
                    onClose: function () {
                        if ($(window.event?.srcElement).hasClass("ui-datepicker-close")) {
                            $(this).val(""); // Clear the input
                        }
                    }
                }).addClass("datepicker");
            }
            // Initialize all datepickers
            initSimpleDatepicker("#ClosureDate");
        });
    </script>
}
