@model BankSetupPropertyValuersAuthorityViewModel
@{
	ViewBag.Title = Model.BankSetupPropertyValuersAuthorityId > 0 ? "Update Property Valuers Authority" : "Add Property Valuers Authority";
	string controllerName = ViewContext.RouteData.Values["controller"].ToString();
	string actionName = ViewContext.RouteData.Values["action"].ToString();
	DropdownViewModel bankSetupMortagePropertyTypeIdDropdown = new DropdownViewModel() { DropdownType = DropdownCustomTypeEnum.PropertyName.ToString(), DropdownName = "BankSetupMortagePropertyTypeId", DropdownSelectedValue = Model.BankSetupMortagePropertyTypeId.ToString(), IsCustomDropdown = true };
}
<!-- Page Content-->
<div class="page-content mt-5">
	<div class="container-fluid">
		<div class="row">
			<div class="col-lg-12">
				<div class="card">
					<div class="card-header">
						<div class="row align-items-center">
							<div class="col">
								@if (Model.BankSetupPropertyValuersAuthorityId > 0)
								{
									<h4 class="card-title">Update Property Valuers Authority</h4>
								}
								else
								{
									<h4 class="card-title">Create Property Valuers Authority</h4>
								}
							</div><!--end col-->
						</div>  <!--end row-->
					</div>
					<div class="card-body">
						@using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
						{
							@Html.HiddenFor(m => m.BankSetupPropertyValuersAuthorityId)
							<div class="row">
								<div class="col-lg-6">
									<div class="mb-3">
										@Html.LabelFor(x => x.BankSetupMortagePropertyTypeId, new { @class = "form-label required" })
										@Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", bankSetupMortagePropertyTypeIdDropdown)
										@Html.ValidationMessageFor(x => x.BankSetupMortagePropertyTypeId)
									</div>
								</div>
								<div class="col-lg-4">
									<div class="mb-3">
										@Html.LabelFor(x => x.FromPropertyValueRangeStart, new { @class = "form-label required" })
										@Html.TextBoxFor(x => x.FromPropertyValueRangeStart, new { @class = "form-control" })
										@Html.ValidationMessageFor(x => x.FromPropertyValueRangeStart)
									</div>
								</div>
							</div>
							<div class="col-lg-4">
								<div class="mb-3">
									@Html.LabelFor(x => x.FromPropertyValueRangeEnd, new { @class = "form-label required" })
									@Html.TextBoxFor(x => x.FromPropertyValueRangeEnd, new { @class = "form-control" })
									@Html.ValidationMessageFor(x => x.FromPropertyValueRangeEnd)
								</div>
							</div>
							<button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
							<a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
